<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reportMapper">

	<sql id="whereReport">
		<if test="pAccountIds != null and pAccountIds != '' ">
			AND ACCOUNT_ID IN 
			<foreach collection="pAccountIds" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		
		<if test="chkCorpList != null and chkCorpList != '' ">
			AND A.CORP_CODE IN 
			<foreach collection="chkCorpList" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		
		<if test="(pStartYear != null and pStartYear != '') or (pEndYear != null and pEndYear != '') ">
			AND A.BSNS_YEAR BETWEEN #{pStartYear} AND #{pEndYear}
		</if>
	</sql>
	
	<insert id="insert" parameterType="hashMap" useGeneratedKeys="true" keyProperty="book_id">  
	    insert into book
	    (title, category, price) 
	    values
	    (#{title}, #{category}, #{price})
	</insert>
	
	<!-- 
	<select id="getReportSearchTest" parameterType="hashMap" resultType="HashMap">  
	    SELECT * FROM (
		    SELECT CORP_CODE, CORP_NAME, BSNS_YEAR, REPRT_CODE,
		    sj_div, account_id, account_nm, 
		    NET_AMOUNT, ROUND(((NET_AMOUNT - LEAD_NET_AMOUNT) / DECODE(NET_AMOUNT, 0, NULL, NET_AMOUNT) * 100), 2) AS NET_AMOUNT_RATE,
		    ACC_NET_AMOUNT, ROUND(((ACC_NET_AMOUNT - LEAD_ACC_NET_AMOUNT) / DECODE(LEAD_ACC_NET_AMOUNT, 0, NULL, LEAD_ACC_NET_AMOUNT) * 100), 2) AS ACC_NET_AMOUNT_RATE, 
		    BEF_NET_AMOUNT, ROUND(((BEF_NET_AMOUNT - LEAD_BEF_NET_AMOUNT) / DECODE(LEAD_BEF_NET_AMOUNT, 0, NULL, LEAD_BEF_NET_AMOUNT) * 100), 2) AS BEF_NET_AMOUNT_RATE, 
		    BEF_ACC_NET_AMOUNT, ROUND(((BEF_ACC_NET_AMOUNT - LEAD_BEF_ACC_NET_AMOUNT) / DECODE(LEAD_BEF_ACC_NET_AMOUNT, 0, NULL, LEAD_BEF_ACC_NET_AMOUNT) * 100), 2) AS BEF_ACC_NET_AMOUNT_RATE
		    FROM (
		        SELECT
		            a.corp_code, b.corp_name, a.bsns_year, a.reprt_code,
		            a.sj_div, replace(a.account_id,'ifrs_','ifrs-full_') account_id, a.account_nm,
		            nvl(a.net_amount,0) as net_amount, lead(nvl(a.net_amount,0)) over (partition by a.corp_code, replace(a.account_id,'ifrs_','ifrs-full_') order by a.corp_code, a.bsns_year desc, a.reprt_code asc) as lead_net_amount,
		            nvl(a.accumulated_net_amount,0) as acc_net_amount, lead(nvl(a.accumulated_net_amount,0)) over (partition by a.corp_code, replace(a.account_id,'ifrs_','ifrs-full_') order by a.corp_code, a.bsns_year desc, a.reprt_code asc) as lead_acc_net_amount,
		            nvl(a.bef_net_amount,0) as bef_net_amount,  lead(nvl(a.bef_net_amount,0)) over (partition by a.corp_code, replace(a.account_id,'ifrs_','ifrs-full_') order by a.corp_code, a.bsns_year desc, a.reprt_code asc) as lead_bef_net_amount,
		            nvl(a.bef_accumulated_net_amount,0) as bef_acc_net_amount, lead(nvl(a.bef_accumulated_net_amount,0)) over (partition by a.corp_code, replace(a.account_id,'ifrs_','ifrs-full_') order by a.corp_code, a.bsns_year desc, a.reprt_code asc) as lead_bef_acc_net_amount
		        FROM
		            tb_bplc_cis a INNER JOIN tb_bplc b 
		            ON a.corp_code = b.stock_code
		            where 1=1
		            and replace(a.account_id,'ifrs_','ifrs-full_') in (
		                'ifrs-full_Revenue', 'ifrs-full_CostOfSales', 'ifrs-full_GrossProfit',
		                'dart_TotalSellingGeneralAdministrativeExpenses', 'dart_OperatingIncomeLoss',
		                'ifrs-full_ProfitLossBeforeTax', 'ifrs-full_IncomeTaxExpenseContinuingOperations',
		                'ifrs-full_ProfitLossFromContinuingOperations', 'ifrs-full_ProfitLossFromDiscontinuedOperations',
		                'ifrs-full_ProfitLoss', 'ifrs-full_EarningsPerShareAbstract',
		                'ifrs-full_BasicEarningsLossPerShare', 'ifrs-full_OtherComprehensiveIncome',
		                'dart_OtherComprehensiveIncomeThatWillNotBeReclassifiedToProfitOrLossNetOfTax', 'dart_OtherComprehensiveIncomeThatWillBeReclassifiedToProfitOrLossNetOfTax',
		                'ifrs-full_ComprehensiveIncome', 'ifrs-full_ComprehensiveIncomeAttributableToAbstract',
		                'ifrs-full_ComprehensiveIncomeAttributableToOwnersOfParent'
		            )
		            order by a.corp_code, replace(a.account_id,'ifrs_','ifrs-full_'), a.bsns_year desc, a.reprt_code asc
		    )
		)
		where 1=1
		<include refid = "whereReport"/>
		and account_id in ('ifrs-full_Revenue','dart_OperatingIncomeLoss','ifrs-full_ProfitLoss')
		order by corp_code, account_id, bsns_year desc, reprt_code asc
	</select>
	 -->
	 
	<select id="getReportSearch" parameterType="hashMap" resultType="HashMap">  
	    SELECT * FROM (
			select rank () over(partition by corp_code order by account_id) as rnk, a.* from (
				SELECT 
					<foreach collection="pYearList" item="item" >
						sum(DECODE(bsns_year ,#{item},ROUND(((ACC_NET_AMOUNT - LEAD_ACC_NET_AMOUNT) / DECODE(LEAD_ACC_NET_AMOUNT, 0, NULL, LEAD_ACC_NET_AMOUNT) * 100), 2))) AS RATE_${item},
					</foreach>
				    corp_code , corp_name , account_id
				FROM (
					select NVL(A.NET_AMOUNT,0) AS NET_AMOUNT, LEAD(NVL(A.NET_AMOUNT,0)) OVER (PARTITION BY A.CORP_CODE, REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_') ORDER BY A.CORP_CODE, A.BSNS_YEAR DESC, A.REPRT_CODE ASC) AS LEAD_NET_AMOUNT,
					        NVL(A.ACCUMULATED_NET_AMOUNT,0) AS ACC_NET_AMOUNT, LEAD(NVL(A.ACCUMULATED_NET_AMOUNT,0)) OVER (PARTITION BY A.CORP_CODE, REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_') ORDER BY A.CORP_CODE, A.BSNS_YEAR DESC, A.REPRT_CODE ASC) AS LEAD_ACC_NET_AMOUNT,
					        NVL(A.BEF_NET_AMOUNT,0) AS BEF_NET_AMOUNT,  LEAD(NVL(A.BEF_NET_AMOUNT,0)) OVER (PARTITION BY A.CORP_CODE, REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_') ORDER BY A.CORP_CODE, A.BSNS_YEAR DESC, A.REPRT_CODE ASC) AS LEAD_BEF_NET_AMOUNT,
					        NVL(A.BEF_ACCUMULATED_NET_AMOUNT,0) AS BEF_ACC_NET_AMOUNT, LEAD(NVL(A.BEF_ACCUMULATED_NET_AMOUNT,0)) OVER (PARTITION BY A.CORP_CODE, REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_') ORDER BY A.CORP_CODE, A.BSNS_YEAR DESC, A.REPRT_CODE ASC) AS LEAD_BEF_ACC_NET_AMOUNT,
					        a.corp_code , b.corp_name , REPLACE(a.ACCOUNT_ID,'ifrs_','ifrs-full_') as ACCOUNT_ID, a.bsns_year
					from tb_Bplc_cis a inner join tb_Bplc b
					on a.corp_code = b.stock_code
				) A
				where 1=1
					<include refid = "whereReport"/>
				group by corp_code , corp_name , account_id
			) a
			where  1=1 
		)
		where 1=1
		<foreach collection="chkYearList" item="item" >
				AND RATE_${item} > #{chkAccRate}
		</foreach>
		and rnk = #{pAccountCnt}
	</select>
	
	
	<select id="getReportList" parameterType="hashMap" resultType="HashMap">  
	    SELECT 	SEQ, corp_code , corp_name , account_id ,
	    		<foreach collection="pYearList" item="item" >
					RATE_${item},
				</foreach>
			FROM (
				SELECT 
				    2 AS "SEQ",
				    <foreach collection="pYearList" item="item" >
						sum(DECODE(bsns_year ,#{item},ROUND(((ACC_NET_AMOUNT - LEAD_ACC_NET_AMOUNT) / DECODE(LEAD_ACC_NET_AMOUNT, 0, NULL, LEAD_ACC_NET_AMOUNT) * 100), 2))) AS RATE_${item},
					</foreach>
				    corp_code , corp_name , account_id
				FROM (
					select 
					        NVL(A.NET_AMOUNT,0) AS NET_AMOUNT, LEAD(NVL(A.NET_AMOUNT,0)) OVER (PARTITION BY A.CORP_CODE, REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_') ORDER BY A.CORP_CODE, A.BSNS_YEAR DESC, A.REPRT_CODE ASC) AS LEAD_NET_AMOUNT,
					        NVL(A.ACCUMULATED_NET_AMOUNT,0) AS ACC_NET_AMOUNT, LEAD(NVL(A.ACCUMULATED_NET_AMOUNT,0)) OVER (PARTITION BY A.CORP_CODE, REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_') ORDER BY A.CORP_CODE, A.BSNS_YEAR DESC, A.REPRT_CODE ASC) AS LEAD_ACC_NET_AMOUNT,
					        NVL(A.BEF_NET_AMOUNT,0) AS BEF_NET_AMOUNT,  LEAD(NVL(A.BEF_NET_AMOUNT,0)) OVER (PARTITION BY A.CORP_CODE, REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_') ORDER BY A.CORP_CODE, A.BSNS_YEAR DESC, A.REPRT_CODE ASC) AS LEAD_BEF_NET_AMOUNT,
					        NVL(A.BEF_ACCUMULATED_NET_AMOUNT,0) AS BEF_ACC_NET_AMOUNT, LEAD(NVL(A.BEF_ACCUMULATED_NET_AMOUNT,0)) OVER (PARTITION BY A.CORP_CODE, REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_') ORDER BY A.CORP_CODE, A.BSNS_YEAR DESC, A.REPRT_CODE ASC) AS LEAD_BEF_ACC_NET_AMOUNT,
					        a.corp_code , b.corp_name , REPLACE(a.ACCOUNT_ID,'ifrs_','ifrs-full_') as ACCOUNT_ID, a.bsns_year
					from 	tb_Bplc_cis a inner join tb_Bplc b
					on 		a.corp_code = b.stock_code
				) a
				where 	1=1
						and REPLACE(ACCOUNT_ID,'ifrs_','ifrs-full_') in ('ifrs-full_Revenue','dart_OperatingIncomeLoss','ifrs-full_ProfitLoss')
						<include refid = "whereReport"/>
				group by 
						corp_code , corp_name , account_id
				union all
				select 
				        1 AS "SEQ",
				        <foreach collection="pYearList" item="item" >
							sum(decode(a.bsns_year ,#{item},a.ACCUMULATED_NET_AMOUNT)) AS RATE_${item},
						</foreach>
				        a.corp_code , b.corp_name , REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_') as account_id
				from 	tb_Bplc_cis a inner join tb_Bplc b
				on 		a.corp_code = b.stock_code
				where 	1=1
						and REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_') in ('ifrs-full_Revenue','dart_OperatingIncomeLoss','ifrs-full_ProfitLoss')
						<include refid = "whereReport"/>
				group by 
						a.corp_code , b.corp_name , REPLACE(A.ACCOUNT_ID,'ifrs_','ifrs-full_')
			) A
			order by corp_code, account_id, SEQ
	</select>
	
	
	<select id="getReportDetailList" parameterType="hashMap" resultType="HashMap">  
	
	SELECT 	CORP_CODE, CORP_NAME, BSNS_YEAR, REPRT_CODE,
			sj_div, account_id, 
			NET_AMOUNT, ROUND(((NET_AMOUNT - LEAD_NET_AMOUNT) / DECODE(NET_AMOUNT, 0, NULL, NET_AMOUNT) * 100), 2) AS NET_AMOUNT_RATE,
			ACC_NET_AMOUNT, ROUND(((ACC_NET_AMOUNT - LEAD_ACC_NET_AMOUNT) / DECODE(LEAD_ACC_NET_AMOUNT, 0, NULL, LEAD_ACC_NET_AMOUNT) * 100), 2) AS ACC_NET_AMOUNT_RATE, 
			BEF_NET_AMOUNT, ROUND(((BEF_NET_AMOUNT - LEAD_BEF_NET_AMOUNT) / DECODE(LEAD_BEF_NET_AMOUNT, 0, NULL, LEAD_BEF_NET_AMOUNT) * 100), 2) AS BEF_NET_AMOUNT_RATE, 
			BEF_ACC_NET_AMOUNT, ROUND(((BEF_ACC_NET_AMOUNT - LEAD_BEF_ACC_NET_AMOUNT) / DECODE(LEAD_BEF_ACC_NET_AMOUNT, 0, NULL, LEAD_BEF_ACC_NET_AMOUNT) * 100), 2) AS BEF_ACC_NET_AMOUNT_RATE
	FROM (
	    SELECT
	        a.corp_code, b.corp_name, a.bsns_year, a.reprt_code,
	        a.sj_div, a.account_id, 
	        nvl(a.net_amount,0) as net_amount, lead(nvl(a.net_amount,0)) over (partition by a.corp_code, a.account_id order by a.corp_code, a.bsns_year desc, a.reprt_code asc) as lead_net_amount,
	        nvl(a.accumulated_net_amount,0) as acc_net_amount, lead(nvl(a.accumulated_net_amount,0)) over (partition by a.corp_code, a.account_id order by a.corp_code, a.bsns_year desc, a.reprt_code asc) as lead_acc_net_amount,
	        nvl(a.bef_net_amount,0) as bef_net_amount,  lead(nvl(a.bef_net_amount,0)) over (partition by a.corp_code, a.account_id order by a.corp_code, a.bsns_year desc, a.reprt_code asc) as lead_bef_net_amount,
	        nvl(a.bef_accumulated_net_amount,0) as bef_acc_net_amount, lead(nvl(a.bef_accumulated_net_amount,0)) over (partition by a.corp_code, a.account_id order by a.corp_code, a.bsns_year desc, a.reprt_code asc) as lead_bef_acc_net_amount
	    FROM
	        tb_bplc_cis a INNER JOIN tb_bplc b 
	        ON a.corp_code = b.stock_code
	        where 1=1
	        order by a.corp_code, a.account_id, a.bsns_year desc, a.reprt_code asc
	)
    </select>
</mapper>