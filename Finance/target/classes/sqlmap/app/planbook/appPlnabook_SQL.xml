<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="appPlanbookMapper">
	
	<sql id="wherePlanbook">
		<!-- 
		<if test="pAccountCnt != 0 ">
			AND replace(account_id, 'ifrs_', 'ifrs-full_') IN 
			<foreach collection="pAccountIds" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		
		<if test="pAccountCnt == 0  ">
			AND replace(account_id, 'ifrs_', 'ifrs-full_') IN 
			( 'ifrs-full_Revenue' , 'dart_OperatingIncomeLoss' , 'ifrs-full_ProfitLoss')
		</if>
		 -->
		 
		
		        
		
	</sql>
	
	
	
	<select id="getPlanbookList" parameterType="hashMap" resultType="HashMap">  
	    SELECT
			A.Corp_Code As "corpCode", A.Corp_Name As "corpName", A.Stock_Code As "stockCode", A.User_Id As "userId"
			, A.Create_Id As "createId", A.Create_Dt As "createDt", A.Change_Id As "changeId", A.Change_Dt As "changeDt"
			,to_number((Select Bef_Cls_Price From Tb_Bplc_Detail Where Corp_Code = A.Corp_Code)) As "befClsPrice"
			, A.Memo As "memo"
			, B.Invest_Opinion As "investOpinion"
			, B.Opinion_Amount1 As "opinionAmount1"
			, B.Opinion_Amount2 As "opinionAmount2"
			, B.Opinion_Amount3 As "opinionAmount3"
			, B.Opinion_Amount4 As "opinionAmount4"
			, B.Opinion_Amount5 As "opinionAmount5"
			, B.Period_Gubn As "periodGubn", NVL((SELECT CODE_NM FROM TB_CODE WHERE CODE = B.Period_Gubn),'미정') As "periodNm"
			,B.Estimate_Eps As "estimateEps", B.Estimate_Per As "estimatePer", B.Estimate_Cagr As "estimateCagr"
		FROM TB_INTEREST A, TB_INTEREST_DETAIL B
		WHERE 1=1
		AND A.CORP_CODE = B.CORP_CODE(+)
		AND A.USER_ID = B.USER_ID(+)
	    AND A.USER_ID = #{curUserId}
	    <if test="pPeriodGubn != null and pPeriodGubn != '' ">
	    	AND B.PERIOD_GUBN = #{pPeriodGubn}
	    </if>
	    <if test="pPeriodGubn == '' ">
	    	AND B.PERIOD_GUBN is NULL
	    </if>
	</select>
	
	<select id="getPlanbookDetail"  parameterType="hashMap" resultType="HashMap">
		SELECT 
		    A.Corp_Code As "corpCode", A.Corp_Name As "corpName", A.Stock_Code As "stockCode", A.User_Id As "userId"
		    , A.Create_Id As "createId", A.Create_Dt As "createDt", A.Change_Id As "changeId", A.Change_Dt As "changeDt"
		    , TO_NUMBER(c.bef_cls_price) AS "befClsPrice"
		    , TO_NUMBER(c.shares_amount) AS "sharesAmount"
		    , TO_NUMBER(c.market_capital)AS "marketCapital"
		    , TO_NUMBER(c.TRADE_VOLUME)AS "tradeVolume"
		    , TO_NUMBER(c.TRADE_AMOUNT)AS "tradeAmount"
		    , TO_NUMBER(c.COMPARE_AMOUNT)AS "compareAmount"
		    , c.FLUCTUATE_RATE AS "fluctuateRate"
		    , TO_NUMBER(c.ST_PRICE)AS "stPrice"
		    , TO_NUMBER(c.HG_PRICE)AS "hgPrice"
		    , TO_NUMBER(c.LW_PRICE)AS "lwPrice"
		    , B.Invest_Opinion As "investOpinion"
		    , B.Opinion_Amount1 As "opinionAmount1"
		    , B.Opinion_Amount2 As "opinionAmount2"
		    , B.Opinion_Amount3 As "opinionAmount3"
		    , B.Opinion_Amount4 As "opinionAmount4"
		    , B.Opinion_Amount5 As "opinionAmount5"
		    , B.Period_Gubn As "periodGubn", NVL((SELECT CODE_NM FROM TB_CODE WHERE CODE = B.Period_Gubn),'미정') As "periodNm"
		    ,B.Estimate_Eps As "estimateEps", B.Estimate_Per As "estimatePer", B.Estimate_Cagr As "estimateCagr"
		FROM TB_INTEREST A, TB_INTEREST_DETAIL B, tb_bplc_detail C
		WHERE 1=1
		AND A.CORP_CODE = B.CORP_CODE(+)
    	AND A.CORP_CODE = C.CORP_CODE
	    AND A.USER_ID = #{curUserId}
	    <if test="pCorpCode != null and pCorpCode != '' ">
	    	AND A.CORP_CODE = #{pCorpCode}
	    </if>
	</select>
	
	
	
	
	<insert id="addInterest" parameterType="HashMap"  >  
		INSERT INTO TB_INTEREST (
				CORP_CODE ,
				CORP_NAME ,
			<if test="STOCK_CODE != null and STOCK_CODE != '' ">
				STOCK_CODE ,
			</if>
			<if test="curUserId != null and curUserId != '' ">
				USER_ID ,
			</if>
			<if test="MEMO != null and MEMO != '' ">
				MEMO ,
			</if>
		    CREATE_ID ,CREATE_DT ,CHANGE_ID ,CHANGE_DT	
		) VALUES (
			(SELECT CORP_CODE FROM TB_BPLC_DETAIL WHERE STOCK_CODE = ${STOCK_CODE}),
			(SELECT STOCK_NAME FROM TB_BPLC_DETAIL WHERE STOCK_CODE = ${STOCK_CODE}),
			<if test="STOCK_CODE != null and STOCK_CODE != '' ">
				#{STOCK_CODE} ,
			</if>
			<if test="curUserId != null and curUserId != '' ">
				#{curUserId} ,
			</if>
			<if test="MEMO != null and MEMO != '' ">
				#{MEMO},
			</if>
		    #{curUserId}  ,TO_CHAR(SYSDATE,'YYYY-MM-DD') ,#{curUserId} ,TO_CHAR(SYSDATE,'YYYY-MM-DD')
		)
	    
	</insert>
	
	<insert id="delInterest" parameterType="HashMap"  >  
	    DELETE  TB_INTEREST 
	    WHERE STOCK_CODE = #{STOCK_CODE}
	    AND USER_ID = #{curUserId}
	</insert>
	
</mapper>